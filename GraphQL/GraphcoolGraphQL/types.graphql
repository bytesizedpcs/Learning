# The following types define the data model of the example service
# based on which the GraphQL API is generated

type User @model {
  id: ID! @isUnique
  name: String
  songs: [Song!]! @relation(name: "UserSongs")
  createdAt: DateTime!
  updatedAt: DateTime!
  # Uncomment below - you can declare relations between models like this

  # posts: [Post!]! @relation(name: "UserPosts")
}

# Uncomment the model below as well

# type Post @model {
#   id: ID! @isUnique
#   title: String!
# 
#   # Every relation also required a back-relation (to determine 1:1, 1:n or n:m)
#   author: User! @relation(name: "UserPosts")
# }

type File implements Node {
  contentType: String!
  updatedAt: DateTime!
  createdAt: DateTime!
  id: ID! @isUnique
  name: String!
  secret: String! @isUnique
  size: Int!
  url: String! @isUnique
}

type Song implements Node {
  createdAt: DateTime!
  tags: [String!]!
  id: ID! @isUnique
  name: String!
  url: String!
  file: File!
}
